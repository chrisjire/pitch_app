"""change

Revision ID: 23e568e67d3c
Revises: d9d6caa91408
Create Date: 2019-09-18 16:38:17.993368

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '23e568e67d3c'
down_revision = 'd9d6caa91408'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('pitch_categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name_of_category', sa.String(length=255), nullable=True),
    sa.Column('category_description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('comments', sa.Column('pitch_id', sa.Integer(), nullable=True))
    op.add_column('comments', sa.Column('username', sa.String(), nullable=True))
    op.add_column('comments', sa.Column('votes', sa.Integer(), nullable=True))
    op.drop_constraint('comments_pitch_fkey', 'comments', type_='foreignkey')
    op.create_foreign_key(None, 'comments', 'pitch', ['pitch_id'], ['id'])
    op.drop_column('comments', 'user_id')
    op.drop_column('comments', 'pitch')
    op.add_column('pitch', sa.Column('pitch', sa.String(), nullable=True))
    op.drop_column('pitch', 'likes')
    op.drop_column('pitch', 'pitch_title')
    op.drop_column('pitch', 'posted')
    op.drop_column('pitch', 'dislikes')
    op.drop_column('pitch', 'pitch_content')
    op.add_column('users', sa.Column('role_id', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'users', 'roles', ['role_id'], ['id'])
    op.drop_column('users', 'firstname')
    op.drop_column('users', 'lastname')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('users', sa.Column('lastname', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.add_column('users', sa.Column('firstname', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'users', type_='foreignkey')
    op.drop_column('users', 'role_id')
    op.add_column('pitch', sa.Column('pitch_content', sa.VARCHAR(length=1000), autoincrement=False, nullable=True))
    op.add_column('pitch', sa.Column('dislikes', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('pitch', sa.Column('posted', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('pitch', sa.Column('pitch_title', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('pitch', sa.Column('likes', sa.INTEGER(), autoincrement=False, nullable=True))
    op.drop_column('pitch', 'pitch')
    op.add_column('comments', sa.Column('pitch', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('comments', sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'comments', type_='foreignkey')
    op.create_foreign_key('comments_pitch_fkey', 'comments', 'pitch', ['pitch'], ['id'])
    op.drop_column('comments', 'votes')
    op.drop_column('comments', 'username')
    op.drop_column('comments', 'pitch_id')
    op.drop_table('roles')
    op.drop_table('pitch_categories')
    # ### end Alembic commands ###
